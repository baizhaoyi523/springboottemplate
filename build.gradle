plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id "com.github.spotbugs" version "3.0.0"
    id "org.owasp.dependencycheck" version "5.2.4"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

sourceSets {
    componentTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }

    apiTest {
        resources {
            srcDirs.add(file("src/apiTest/resources"))
        }
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

task componentTest(type: Test) {
    description = 'Runs component tests.'
    group = 'verification'
    testClassesDirs = sourceSets.componentTest.output.classesDirs
    classpath = sourceSets.componentTest.runtimeClasspath
    shouldRunAfter test
}


task apiTest(type: Test) {
    description = 'Runs Api tests.'
    group = 'verification'
    testClassesDirs = sourceSets.apiTest.output.classesDirs
    classpath = sourceSets.apiTest.runtimeClasspath
    shouldRunAfter componentTest
}

check.dependsOn componentTest
check.dependsOn apiTest

test {
    useJUnitPlatform()
}

componentTest {
    useJUnitPlatform()
}

apiTest {
    useJUnitPlatform()
}

apply from: "${rootProject.projectDir}/gradle/idea.gradle"
apply from: "${rootProject.projectDir}/gradle/jacoco.gradle"
apply from: "${rootProject.projectDir}/gradle/checkstyle.gradle"
apply from: "${rootProject.projectDir}/gradle/spotbugs.gradle"
apply from: "${rootProject.projectDir}/gradle/git-hooks.gradle"
apply from: "${rootProject.projectDir}/gradle/dependency-check.gradle"

group 'com.bzy'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    componentTestCompile.extendsFrom testCompile
    componentTestRuntime.extendsFrom testRuntime

    apiTestCompile.extendsFrom testCompile
    apiTestRuntime.extendsFrom testRuntime
}

configurations.all {
    exclude group: 'org.quartz-scheduler', module: 'quartz'
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // needed because the query dsl annotation processor doesn't recognize javax.persistence.Entity
    annotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.session:spring-session:1.3.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    // swagger
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // common
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.google.guava:guava:28.0-jre'

    // persistence
    implementation 'com.microsoft.sqlserver:mssql-jdbc:7.2.1.jre8'
    implementation 'com.querydsl:querydsl-jpa:4.2.2'
    annotationProcessor 'com.querydsl:querydsl-apt:4.2.2:jpa'
    implementation 'org.flywaydb:flyway-core'
//    implementation 'mysql:mysql-connector-java'
//    implementation 'org.xerial:sqlite-jdbc'
//    implementation 'com.github.gwenn:sqlite-dialect:0.1.0'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.github.database-rider:rider-junit5:1.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.2'
}
